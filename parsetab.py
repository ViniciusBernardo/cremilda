
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'moduleCOMMA_ ELSE_ EQUAL_ FALSE IF_ LPAREN_ MINUS_ NAME NOT_ NUMBER OP PLUS_ RPAREN_ SEMICOLON_ STRING THEN_ TK_SYMB_12_ TK_SYMB_13_ TRUE TYPENAMEatom : NUMBERatom : STRINGatom : TRUEatom : FALSEatom : TYPENAMEatom : NAMEatom : listdefargs : NAMEdefargs : NAME COMMA_ defargselem : valueelem : value OP valueelem : ifexprelem : PLUS_ valueelem : MINUS_ valueelem : NOT_ valueexpr : elemfargs : elemfargs : elem COMMA_ fargsfcall : value LPAREN_ RPAREN_fcall : value LPAREN_ fargs RPAREN_fundef : NAME LPAREN_ defargs RPAREN_ EQUAL_ exprifexpr : IF_ value THEN_ elem ELSE_ elemitems : elemitems : elem COMMA_ itemsitems : elem COMMA_ items COMMA_list : TK_SYMB_12_ TK_SYMB_13_list : TK_SYMB_12_ items TK_SYMB_13_module : statement SEMICOLON_module : statement SEMICOLON_ modulestatement : vardefstatement : fundefvalue : atomvalue : fcallvalue : LPAREN_ expr RPAREN_vardef : NAME EQUAL_ expr'
    
_lr_action_items = {'NAME':([0,6,7,8,15,16,17,20,21,28,31,32,41,48,50,52,54,59,],[5,5,10,29,10,10,10,10,10,10,10,10,29,10,10,10,10,10,]),'$end':([1,6,9,],[0,-28,-29,]),'SEMICOLON_':([2,3,4,10,11,12,13,14,18,19,22,23,24,25,26,27,33,34,35,38,43,44,47,49,53,57,61,],[6,-30,-31,-6,-35,-16,-10,-12,-32,-33,-1,-2,-3,-4,-5,-7,-13,-14,-15,-26,-11,-19,-34,-27,-20,-21,-22,]),'EQUAL_':([5,42,],[7,52,]),'LPAREN_':([5,7,10,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,37,38,43,44,47,48,49,50,52,53,54,59,],[8,20,-6,32,20,20,20,-32,-33,20,20,-1,-2,-3,-4,-5,-7,20,20,20,32,32,32,32,-26,32,-19,-34,20,-27,20,20,-20,20,20,]),'PLUS_':([7,20,28,32,48,50,52,54,59,],[15,15,15,15,15,15,15,15,15,]),'MINUS_':([7,20,28,32,48,50,52,54,59,],[16,16,16,16,16,16,16,16,16,]),'NOT_':([7,20,28,32,48,50,52,54,59,],[17,17,17,17,17,17,17,17,17,]),'IF_':([7,20,28,32,48,50,52,54,59,],[21,21,21,21,21,21,21,21,21,]),'NUMBER':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'STRING':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TRUE':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FALSE':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TYPENAME':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TK_SYMB_12_':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'OP':([10,13,18,19,22,23,24,25,26,27,38,44,47,49,53,],[-6,31,-32,-33,-1,-2,-3,-4,-5,-7,-26,-19,-34,-27,-20,]),'RPAREN_':([10,12,13,14,18,19,22,23,24,25,26,27,29,30,32,33,34,35,36,38,43,44,45,46,47,49,51,53,58,61,],[-6,-16,-10,-12,-32,-33,-1,-2,-3,-4,-5,-7,-8,42,44,-13,-14,-15,47,-26,-11,-19,53,-17,-34,-27,-9,-20,-18,-22,]),'COMMA_':([10,13,14,18,19,22,23,24,25,26,27,29,33,34,35,38,40,43,44,46,47,49,53,56,60,61,],[-6,-10,-12,-32,-33,-1,-2,-3,-4,-5,-7,41,-13,-14,-15,-26,50,-11,-19,54,-34,-27,-20,60,-25,-22,]),'TK_SYMB_13_':([10,13,14,18,19,22,23,24,25,26,27,28,33,34,35,38,39,40,43,44,47,49,53,56,60,61,],[-6,-10,-12,-32,-33,-1,-2,-3,-4,-5,-7,38,-13,-14,-15,-26,49,-23,-11,-19,-34,-27,-20,-24,-25,-22,]),'ELSE_':([10,13,14,18,19,22,23,24,25,26,27,33,34,35,38,43,44,47,49,53,55,61,],[-6,-10,-12,-32,-33,-1,-2,-3,-4,-5,-7,-13,-14,-15,-26,-11,-19,-34,-27,-20,59,-22,]),'THEN_':([10,18,19,22,23,24,25,26,27,37,38,44,47,49,53,],[-6,-32,-33,-1,-2,-3,-4,-5,-7,48,-26,-19,-34,-27,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,6,],[1,9,]),'statement':([0,6,],[2,2,]),'vardef':([0,6,],[3,3,]),'fundef':([0,6,],[4,4,]),'expr':([7,20,52,],[11,36,57,]),'elem':([7,20,28,32,48,50,52,54,59,],[12,12,40,46,55,40,12,46,61,]),'value':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[13,33,34,35,13,37,13,43,13,13,13,13,13,13,]),'ifexpr':([7,20,28,32,48,50,52,54,59,],[14,14,14,14,14,14,14,14,14,]),'atom':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'fcall':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'list':([7,15,16,17,20,21,28,31,32,48,50,52,54,59,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'defargs':([8,41,],[30,51,]),'items':([28,50,],[39,56,]),'fargs':([32,54,],[45,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('atom -> NUMBER','atom',1,'p_atom_1','ply.py',126),
  ('atom -> STRING','atom',1,'p_atom_2','ply.py',126),
  ('atom -> TRUE','atom',1,'p_atom_3','ply.py',126),
  ('atom -> FALSE','atom',1,'p_atom_4','ply.py',126),
  ('atom -> TYPENAME','atom',1,'p_atom_5','ply.py',126),
  ('atom -> NAME','atom',1,'p_atom_6','ply.py',126),
  ('atom -> list','atom',1,'p_atom_7','ply.py',126),
  ('defargs -> NAME','defargs',1,'p_defargs_1','ply.py',126),
  ('defargs -> NAME COMMA_ defargs','defargs',3,'p_defargs_2','ply.py',126),
  ('elem -> value','elem',1,'p_elem_1','ply.py',126),
  ('elem -> value OP value','elem',3,'p_elem_2','ply.py',126),
  ('elem -> ifexpr','elem',1,'p_elem_3','ply.py',126),
  ('elem -> PLUS_ value','elem',2,'p_elem_4','ply.py',126),
  ('elem -> MINUS_ value','elem',2,'p_elem_5','ply.py',126),
  ('elem -> NOT_ value','elem',2,'p_elem_6','ply.py',126),
  ('expr -> elem','expr',1,'p_expr_1','ply.py',126),
  ('fargs -> elem','fargs',1,'p_fargs_1','ply.py',126),
  ('fargs -> elem COMMA_ fargs','fargs',3,'p_fargs_2','ply.py',126),
  ('fcall -> value LPAREN_ RPAREN_','fcall',3,'p_fcall_1','ply.py',126),
  ('fcall -> value LPAREN_ fargs RPAREN_','fcall',4,'p_fcall_2','ply.py',126),
  ('fundef -> NAME LPAREN_ defargs RPAREN_ EQUAL_ expr','fundef',6,'p_fundef_1','ply.py',126),
  ('ifexpr -> IF_ value THEN_ elem ELSE_ elem','ifexpr',6,'p_ifexpr_1','ply.py',126),
  ('items -> elem','items',1,'p_items_1','ply.py',126),
  ('items -> elem COMMA_ items','items',3,'p_items_2','ply.py',126),
  ('items -> elem COMMA_ items COMMA_','items',4,'p_items_3','ply.py',126),
  ('list -> TK_SYMB_12_ TK_SYMB_13_','list',2,'p_list_1','ply.py',126),
  ('list -> TK_SYMB_12_ items TK_SYMB_13_','list',3,'p_list_2','ply.py',126),
  ('module -> statement SEMICOLON_','module',2,'p_module_1','ply.py',126),
  ('module -> statement SEMICOLON_ module','module',3,'p_module_2','ply.py',126),
  ('statement -> vardef','statement',1,'p_statement_1','ply.py',126),
  ('statement -> fundef','statement',1,'p_statement_2','ply.py',126),
  ('value -> atom','value',1,'p_value_1','ply.py',126),
  ('value -> fcall','value',1,'p_value_2','ply.py',126),
  ('value -> LPAREN_ expr RPAREN_','value',3,'p_value_3','ply.py',126),
  ('vardef -> NAME EQUAL_ expr','vardef',3,'p_vardef_1','ply.py',126),
]
